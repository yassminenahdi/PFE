package com.service;
import java.util.List;
import java.util.Optional;
import com.model.WALLET_OPERATIONS;

public interface WalletOperationsService {
	// ğŸ”¹ RÃ©cupÃ©rer toutes les opÃ©rations
    List<WALLET_OPERATIONS> getAllOperations();

    // ğŸ”¹ RÃ©cupÃ©rer une opÃ©ration par son identifiant unique
    Optional<WALLET_OPERATIONS> getOperationById(Integer WOP_CODE);

    // ğŸ”¹ CrÃ©er une nouvelle opÃ©ration
    WALLET_OPERATIONS createOperation(WALLET_OPERATIONS operation);

    // ğŸ”¹ Mettre Ã  jour une opÃ©ration existante
    WALLET_OPERATIONS updateOperation(Integer WOP_CODE, WALLET_OPERATIONS operationDetails);

    // ğŸ”¹ Supprimer une opÃ©ration
    void deleteOperation(Integer WOP_CODE);

    // ğŸ”¹ RÃ©cupÃ©rer les opÃ©rations dâ€™un portefeuille donnÃ©
   /* List<WALLET_OPERATIONS> getOperationsByWalletCode(Integer walletCode);

    // ğŸ”¹ RÃ©cupÃ©rer les opÃ©rations dâ€™un client donnÃ©
    List<WALLET_OPERATIONS> getOperationsByCustomerCode(Integer customerCode);

    // ğŸ”¹ RÃ©cupÃ©rer les opÃ©rations selon leur statut
    List<WALLET_OPERATIONS> getOperationsByStatus(String status);

    // ğŸ”¹ RÃ©cupÃ©rer les opÃ©rations dâ€™un portefeuille triÃ©es par date dÃ©croissante
    List<WALLET_OPERATIONS> getOperationsByWalletSortedByTimestamp(Integer walletCode);*/
    
    List<WALLET_OPERATIONS> searchWalletOperations(String searchWord);

}
